server:
  port: 8086
  servlet:
    context-path: /api

spring:
  application:
    name: delivery-app-backend
    
  sql:
    init:
      mode: never  # 设置为 never 避免意外执行
      # schema-locations: classpath:db_postgresql_exact.sql
    
  datasource:
    url: jdbc:postgresql://localhost:5432/postgres
    username: gloriaupup
    password: ""
    driver-class-name: org.postgresql.Driver
    hikari:
      maximum-pool-size: 10
      minimum-idle: 2
      connection-timeout: 30000
    
  jpa:
    hibernate:
      ddl-auto: update
    show-sql: true
    properties:
      hibernate:
        dialect: org.hibernate.dialect.PostgreSQLDialect
        format_sql: true
        show_sql: true
        hbm2ddl:
          auto: update
    database-platform: org.hibernate.dialect.PostgreSQLDialect
    
  jackson:
    default-property-inclusion: non_null
    property-naming-strategy: LOWER_CAMEL_CASE
    
  web:
    cors:
      allowed-origins: 
        - "http://localhost:3000"
        - "http://localhost:19006"
      allowed-methods:
        - GET
        - POST
        - PUT
        - PATCH
        - DELETE
        - OPTIONS
      allowed-headers: "*"
      allow-credentials: true

logging:
  level:
    root: WARN
    com.flagcamp.delivery: INFO
    org.springframework.boot: INFO
    org.springframework.security: WARN
    org.springframework.web: INFO
    org.hibernate.SQL: DEBUG
    org.hibernate.type.descriptor.sql.BasicBinder: DEBUG
    org.hibernate.tool.hbm2ddl: DEBUG
    org.hibernate.tool.schema: DEBUG
    org.apache.tomcat: WARN
    org.hibernate.jpa.internal.util.LogHelper: WARN
  pattern:
    console: "%clr(%d{HH:mm:ss.SSS}){faint} %clr(%5p) %clr(---){faint} %clr([%15.15t]){faint} %clr(%-40.40logger{39}){cyan} : %m%n"
    file: "%d{yyyy-MM-dd HH:mm:ss.SSS} [%thread] %-5level %logger{36} - %msg%n"

# JWT Configuration
jwt:
  secret: ${JWT_SECRET:myVerySecretKeyThatIsLongEnoughForJWTSigningAndMustBeAtLeast256BitsLong}
  expiration: 86400000 # 24 hours in milliseconds

# Payment Configuration
payment:
  test-mode: true
  stripe:
    secret-key: ${STRIPE_SECRET_KEY:sk_test_placeholder}

# External APIs
external-apis:
  google-maps:
    api-key: ${GOOGLE_MAPS_API_KEY:AIzaSyA4XlR03pt55EHDb6S_t3zZcDIC9zDoNk4}

    # Updated to use Places API key for better autocomplete
  
# Delivery Configuration
delivery:
  max-distance-km: 50
  default-price-per-km: 2.5
  robot:
    base-price: 12.50
    speed-kmh: 15
  drone:
    base-price: 18.00
    speed-kmh: 45
    weather-dependent: true